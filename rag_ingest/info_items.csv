TURKSAT 6A is the pride of the Turkish space agency (Tübitak UZAY) as it is the first completely domestically manufactured communication satelite.
The advancement of the space industry in the world is seen as a common benefit in Turkey
TURKSAT 6A is a milestone project 
Alper Gezeracvi was the first Turkish astranaut and he went to the ISS (International Space Station)
Atakan Kaya is the author of this code and all of the components that come along with it
numbers between 0 and 100 like 10 20 30 40 50 60 70 80 90 in the context of years of a date mean something different numbers bigger than 50 refers to the 19xx s meanwhile the numbers between 00 and 50 is talking about 20xx s
"Map synonyms “NORAD ID”, “catalog number”, or “satcat number” to column: norad_cat_id."
"Map synonyms “COSPAR”, “International Designator”, “INTL DES”, or “NSSDC” to column: object_id."
"Map synonyms “name”, “satellite name”, or “spacecraft” to column: object_name."
"Map synonyms “type”, “payloads”, “rocket bodies”, “debris”, or “junk” to column: object_type."
"Map synonyms “country”, “nation”, “origin”, or “owner (country)” to column: country."
"Map phrases “launch date”, “launch year”, “launch month”, or “launched” to column: launch_date."
Map synonyms “launch site” or “spaceport” to column: launch_site.
"Map synonyms “decay”, “reentry”, or “deorbited” to column: decay_date."
Map synonyms “period” or “minutes per orbit” to column: period_min.
Map synonyms “inclination” or “tilt” to column: inclination_deg.
Map phrases “apogee altitude/height” or “perigee altitude/height” to columns: apogee_km / perigee_km.
"Map synonyms “RCS”, “radar cross section”, or size labels “small/medium/large” to column: rcs_size."
Interpret phrases “on-orbit” or “still in space” as filter: decay_date IS NULL.
"YEAR NORMALIZATION RULE: When a two-digit year 'YY' is mentioned, map 00–49 → 2000–2049 and 50–99 → 1950–1999. EXAMPLES: '03'→2003, '20'→2020, '49'→2049, '50'→1950, '69'→1969, '98'→1998. Keep four-digit years as-is."
YEAR DISAMBIGUATION: Interpret two-digit years with cutoff=50. If 0 ≤ YY ≤ 49 then year=2000+YY; if 50 ≤ YY ≤ 99 then year=1900+YY. EXAMPLES: 'payloads from 70' → 1970; 'launches in 07' → 2007.
"DATE PARSING POLICY: Numbers between 00–49 denote 20xx; numbers between 50–99 denote 19xx. Four-digit years (e.g., 1986, 2010) are already explicit. EXAMPLES: 'in 80' → 1980; 'in 24' → 2024."
SHORT YEAR HANDLING: Treat 'YY as year' with pivot at 50. Map 00–49 ↦ 2000–2049; 50–99 ↦ 1950–1999. DO NOT change ISO dates (YYYY-MM-DD). EXAMPLES: 'launches in 63' → 1963; 'missions in 21' → 2021.
"AMBIGUOUS YEAR RULE: If user writes a bare two-digit year, expand with pivot=50. 00–49 → 20YY; 50–99 → 19YY. If a century is stated (e.g., 'the 1900s'), keep it. EXAMPLES: '’90' → 1990; '’05' → 2005."
LEXICAL CUE: Phrases like 'the 70s' or '70s-era' map to 1970–1979 unless the user explicitly says '2070s'. Two-digit standalone '70' also → 1970 by the 50-pivot rule. EXAMPLES: '70s launches' → 1970–1979.
"QUERY REWRITE HINT: Before generating SQL, normalize two-digit years using pivot=50 and replace the original tokens. Example rewrite: INPUT 'Starlink launches in 23' → NORMALIZED 'Starlink launches in 2023'."
"GUARDRAIL: Do not infer centuries for non-year numbers (e.g., perigee=70 km is not a year). Apply the 2-digit year rule only when the token is semantically a year in a date/time context."
"EDGE CASES: If the user specifies a century or four-digit year anywhere in the query, that takes precedence over the pivot rule. Example: 'in the 2000s, especially 03' → prefer 2003."
"IMPLEMENTATION NOTE: When building SQL predicates, expand ranges: 'in the 90s' → year BETWEEN 1990 AND 1999; 'in 05' → year=2005; 'before 50' (as year) → year<1950 (but confirm context)."